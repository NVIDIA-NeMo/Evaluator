# SPDX-FileCopyrightText: Copyright (c) 2025, NVIDIA CORPORATION. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# How to use: copy this file locally into a directory, say `examples`, and run
# Run this config with `nemo-evaluator-launcher run --config-dir examples --config-name local_auto_export_llama_3_1_8b_instruct`.
# After successful evaluation, results will be automatically exported to W&B, MLFlow, and GSheets, depending on
# which exporters you have enabled.

# specify default configs for execution, deployment, and export
defaults:
  - execution: local
  - deployment: none
  - _self_

execution:
  output_dir: llama_3_1_8b_instruct_auto_export_results
  
  # Auto-export destinations
  auto_export:
    destinations: ["mlflow"]

target:
  api_endpoint:
    model_id: meta/llama-3.1-8b-instruct
    url: https://integrate.api.nvidia.com/v1/chat/completions
    api_key_name: NGC_API_KEY

evaluation:
  tasks:
    - name: gpqa_diamond
      env_vars:
        HF_TOKEN: HF_TOKEN_FOR_GPQA_DIAMOND 

# Exporter configurations (paired with auto-export only)
export:
  mlflow:
    tracking_uri: "http://mlflow.nvidia.com:5003"
    experiment_name: "nv-eval"
    description: "nemo-evaluator-launcher Evaluation test run with auto-export"
    log_metrics: ["gpqa_diamond_score_micro"]
    log_logs: true
    only_required: false
    
    # MLflow tags (key-value pairs)
    tags:
      framework: "none"
    
    # Additional metadata goes into mlflow.log_params()
    extra_metadata:
      experiment_phase: "baseline"